<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping SYSTEM
			"http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd" >

<!--

Mapping file for the Item class of CaveatEmptor.

An Item is the central entity of an auction. One interesting
aspect of this mapping is the <bag> used for the collection
of Bids. The Item Java class uses a List for this collection,
and Hibernate will order the collection on load by the
creation date of the bids.

Again, notice the 4000 character limit of Oracle VARCHAR
columns for the text description.

@author Christian Bauer <christian@hibernate.org>

-->
<hibernate-mapping package="org.hibernate.auction.model">

<class name="Item"
	   table="ITEM" lazy="true">

	<!-- Common id property. -->
	<id name="id"
		type="long"
		column="ITEM_ID"
		unsaved-value="null"
		access="org.hibernate.auction.persistence.DirectSetAccessor">
		<generator class="native"/>
	</id>

	<!-- A versioned entity. -->
	<version name="version"
			 column="VERSION"
			 access="org.hibernate.property.DirectPropertyAccessor"/>

	<!-- Name of the item is immutable. -->
	<property   name="name"
				type="string"
				column="NAME"
				length="255"
				not-null="true"
				update="false"
				access="org.hibernate.auction.persistence.DirectSetAccessor"/>

	<!-- Limit item description to 4000 characters, Oracle. -->
	<property   name="description"
				type="string"
				column="DESCRIPTION"
				length="4000"
				not-null="true"/>

	<!-- UserTpe for prices, length is precision of decimal field for DDL. -->
	<property   name="initialPrice"
				type="org.hibernate.auction.persistence.MonetaryAmountCompositeUserType"
				access="org.hibernate.auction.persistence.DirectSetAccessor">
		<column name="INITIAL_PRICE" not-null="true" length="2"/>
		<column name="INITIAL_PRICE_CURRENCY" not-null="true"/>
	</property>

	<!-- UserTpe for prices, length is precision of decimal field for DDL. -->
	<property   name="reservePrice"
				type="org.hibernate.auction.persistence.MonetaryAmountCompositeUserType"
				access="org.hibernate.auction.persistence.DirectSetAccessor">
		<column name="RESERVE_PRICE" length="2"/>
		<column name="RESERVE_PRICE_CURRENCY"/>
	</property>

	<!-- We can't change the startDate. -->
	<property   name="startDate"
				column="START_DATE"
				type="java.util.Date"
				update="false"
				not-null="true"
				access="org.hibernate.auction.persistence.DirectSetAccessor"/>

	<!-- We can't change the endDate. -->
	<property   name="endDate"
				column="END_DATE"
				type="java.util.Date"
				update="false"
				not-null="true"
				access="org.hibernate.auction.persistence.DirectSetAccessor"/>

	<!-- Simple property mapped with a custom usertype.-->
	<property   name="state"
				column="STATE"
				type="org.hibernate.auction.persistence.ItemStateUserType"
				access="org.hibernate.auction.persistence.DirectSetAccessor"
				not-null="true"/>

	<!-- Simple property. -->
	<property   name="approvalDatetime"
				column="APPROVAL_DATETIME"
				type="java.util.Date"
				not-null="false"/>

	<!-- We can't change the creation time, so map it with update="false". -->
	<property   name="created"
				column="CREATED"
				type="timestamp"
				update="false"
				not-null="true"
				access="org.hibernate.auction.persistence.DirectSetAccessor"/>

	<!-- Who approved this auction. -->
	<many-to-one name="approvedBy"
				 class="User"
				 cascade="none"
				 column="APPROVED_BY_USER_ID"
				 not-null="false"
				 outer-join="false"
				 foreign-key="FK1_APPROVED_BY_USER_ID"/>

	<!-- We can't change the seller. -->
	<many-to-one name="seller"
				 class="User"
				 cascade="none"
				 column="SELLER_ID"
				 update="false"
				 not-null="true"
				 outer-join="false"
				 access="org.hibernate.auction.persistence.DirectSetAccessor"
				 foreign-key="FK2_SELLER_ID"/>

	<!-- Mark the successful bid. -->
	<many-to-one name="successfulBid"
				 class="Bid"
				 cascade="none"
				 column="SUCCESSFUL_BID_ID"
				 not-null="false"
				 outer-join="false"
				 foreign-key="FK3_SUCCESSFUL_BID_ID"/>

	<!-- We use a one-to-many association to express the relationship
	     to a set of categories. There is an intermediate entity class,
	     CategorizedItem, which in fact makes this a many-to-many
	     association between Item and Category.
	-->
	<set    name="categorizedItems"
			cascade="all-delete-orphan"
			inverse="true"
			lazy="true"
			access="org.hibernate.auction.persistence.DirectSetAccessor">
        <key foreign-key="FK2_CATEGORIZED_ITEM_ID">
            <column name="ITEM_ID" not-null="true" length="16"/>
        </key>
        <one-to-many class="CategorizedItem"/>
	</set>

	<!-- Use a standard parent/child relationship for bids. -->
	<bag    name="bids"
			cascade="all"
			inverse="true"
			order-by="CREATED desc"
			lazy="true"
			access="org.hibernate.auction.persistence.DirectSetAccessor">
		<key>
            <column name="ITEM_ID" not-null="true"/>
        </key>
		<one-to-many class="Bid"/>
	</bag>

</class>

<!-- TODO: This completely ignores currency -->
<query name="minBid"><![CDATA[
	select b from Bid b where b.amount.value =
        (select min(b.amount.value) from Bid b where b.item.id = :itemid)
]]></query>

<!-- TODO: This completely ignores currency -->
<query name="maxBid"><![CDATA[
	select b from Bid b where b.amount.value =
		(select max(b.amount.value) from Bid b where b.item.id = :itemid)
]]></query>

</hibernate-mapping>